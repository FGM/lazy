<?php
/**
 * @file
 * Hidden demo module for lazy.module
 *
 * @author: Frédéric G. MARAND <fgm@osinet.fr>
 *
 * @copyright (c) 2015 Ouest Systèmes Informatiques (OSInet).
 *
 * @license General Public License version 2 or later
 */
use OSInet\Lazy\Asynchronizer;
use OSInet\Lazy\CacheFactory;

function _lazy_demo_block_demo_build() {
  $ret = [
    '#markup' => t('Lazy Block content.'),
  ];
  return $ret;
}

/**
 * Implements hook_block_view('demo').
 */
function _lazy_demo_block_view_demo() {
  $cache = CacheFactory::create();
  $asynchronizer = new Asynchronizer('_lazy_demo_block_demo_build', $cache);
  $asynchronizer->setVerbose(TRUE);
  $content = $asynchronizer->render();
  $result = [
    'subject' => t('Lazy demo block subject'),
    'content' => $content,
  ];
  return $result;
}

/**
 * Implements hook_block_info().
 */
function lazy_demo_block_info() {
  $ret = [
    'demo' => [
      'info' => t('Lazy demo block'),
      'cache' => DRUPAL_CACHE_PER_USER,
    ]        ,
  ];

  return $ret;
}

/**
 * Implements hook_block_view().
 */
function lazy_demo_block_view($delta) {
  $builder = '_' . __FUNCTION__ . "_$delta";
  if (function_exists($builder)) {
    $ret = $builder();
  }
  else {
    $ret = NULL;
  }
  return $ret;
}

/**
 * Implements hook_menu().
 */
function lazy_demo_menu() {
  $items = [];
  $items['lazy_demo'] = [
    'title' => 'Lazy demo',
    'page callback' => 'lazy_demo_page_demo',
    'access arguments' => ['access content'],
  ];

  return $items;
}

/**
 * Controller for 'lazy_demo' route.
 */
function lazy_demo_page_demo() {
  $delay = 3;

  sleep($delay);
  $ret = [
    '#markup' => t('This page takes @delay seconds to build initially, starting at @date.', [
      '@delay' => $delay,
      '@date' => format_date(REQUEST_TIME, 'custom', 'Y-m-d H:i:s'),
    ]),
  ];

  return $ret;
}
