<?php
/**
 * @file
 * Lazy page generation module.
 *
 * @author: Frédéric G. MARAND <fgm@osinet.fr>
 *
 * @copyright (c) 2015 Ouest Systèmes Informatiques (OSInet).
 *
 * @license General Public License version 2 or later
 */

use \Drupal\xautoload\Adapter\LocalDirectoryAdapter;
use \OSInet\Lazy\Controller;
use \OSInet\Lazy\Router;
use \OSInet\Lazy\Variable;

/**
 * Controller for overridden routes.
 *
 * @param string $original_controller
 * @param string $original_route
 *
 * @return mixed|string
 */
function lazy_controller_override($original_controller, $original_route) {
  $args = array_slice(func_get_args(), 2);
  $controller = new Controller($original_route, $original_controller, $args);

  $ret = $controller->build($args);
  return $ret;
}

/**
 * Implements hook_cron_queue_info().
 */
function lazy_cron_queue_info() {
  return Controller::cronQueueInfo();
}

/**
 * PSR-3 Logger factory.
 *
 * @return \Psr\Log\LoggerInterface
 */
function lazy_logger() {
  $logger = &drupal_static(__FUNCTION__);
  if (!isset($logger)) {
    $logger = new Psr3Watchdog();
    $logger->setType('lazy');
  }

  return $logger;
}

/**
 * Implements hook_menu_alter().
 */
function lazy_menu_alter(&$routes) {
  $altered_names = Variable::get('routes');
  $router = new Router($routes, $altered_names, lazy_logger());
  $altered_routes = $router->alteredRoutes();

  foreach ($altered_routes as $name => $info) {
    $routes[$name] = $info;
  }
}

/**
 * Implements hook_xautoload().
 */
function lazy_xautoload(LocalDirectoryAdapter $adapter) {
  $adapter->absolute()->addPsr4('OSInet\Lazy\\', __DIR__ . '/lib/OSInet/Lazy');
}
